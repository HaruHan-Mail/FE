import React, { useState } from 'react';
import { formatDate } from '../../utils/dateUtils';
import './css/EmailCard.css';
// import { favoriteContent } from '../../apis/userBookmarkApi';

const EmailCard = ({ email, onClick, userEmail, token, onFavoriteToggle, isFavorite }) => {
  const [favoriteLoading, setFavoriteLoading] = useState(false);
  const [favoriteError, setFavoriteError] = useState(null);
  const [isFavorited, setIsFavorited] = useState(isFavorite || false);

  // const handleFavoriteClick = async (e) => {
  //   e.stopPropagation(); // Ïπ¥Îìú ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏Í∞Ä Î∞úÏÉùÌïòÏßÄ ÏïäÎèÑÎ°ù Î∞©ÏßÄ

  //   if (favoriteLoading) return;

  //   try {
  //     setFavoriteLoading(true);
  //     setFavoriteError(null);

  //     // ÌÖåÏä§Ìä∏ Î™®ÎìúÏùº Í≤ΩÏö∞ API Ìò∏Ï∂ú ÏóÜÏù¥ ÏÉÅÌÉúÎßå Î≥ÄÍ≤Ω
  //     if (!userEmail || !token) {
  //       setIsFavorited(!isFavorited);
  //       if (onFavoriteToggle) onFavoriteToggle(email.id, !isFavorited);
  //       setFavoriteLoading(false);
  //       return;
  //     }

  //     // Ïã§Ï†ú API Ìò∏Ï∂ú
  //     const response = await favoriteContent(userEmail, token, email.id);

  //     if (response.stateCode === 200) {
  //       setIsFavorited(true);
  //       if (onFavoriteToggle) onFavoriteToggle(email.id, true);
  //     } else if (response.stateCode === 409) {
  //       // Ïù¥ÎØ∏ Ï∞úÌïú Í≤ΩÏö∞
  //       setIsFavorited(true);
  //     }
  //   } catch (error) {
  //     setFavoriteError('Ï∞úÌïòÍ∏∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
  //     console.error('Ï∞úÌïòÍ∏∞ Ïò§Î•ò:', error);
  //   } finally {
  //     setFavoriteLoading(false);
  //   }
  // };

  const handleFavoriteClick = () => {
    console.log('ÌÅ¥Î¶≠');
  };

  return (
    <div className="email-card" onClick={onClick}>
      <div className="email-card-date">{formatDate(email.sentAt)}</div>
      <h3 className="email-card-title">{email.title}</h3>
      <p className="email-card-preview">{email.preview}</p>
      <div className="email-card-footer">
        <span className="email-card-tag">{email.category}</span>
        <button
          className={`email-card-favorite ${isFavorited ? 'favorited' : ''}`}
          onClick={handleFavoriteClick}
          disabled={favoriteLoading}
          title={isFavorited ? 'Ï∞úÌïú Ïª®ÌÖêÏ∏†ÏûÖÎãàÎã§' : 'Ï∞úÌïòÍ∏∞'}
        >
          {favoriteLoading ? '...' : isFavorited ? '‚ù§Ô∏è' : 'ü§ç'}
        </button>
      </div>
      {favoriteError && <div className="email-card-error">{favoriteError}</div>}
    </div>
  );
};

export default EmailCard;
